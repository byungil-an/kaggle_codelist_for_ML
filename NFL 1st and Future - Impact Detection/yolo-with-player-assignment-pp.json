{
    "title": "NFL 1st and Future - Impact Detection",
    "overview": "Description\n\n\nThe National Football League (NFL) has teamed up with Amazon Web Services (AWS) to develop the “Digital Athlete,” a virtual representation of a composite NFL player that the NFL can use to model game scenarios to try to better predict and prevent player injury. The NFL is actively addressing the need for a computer vision system to detect on-field helmet impacts as part of the “Digital Athlete” platform, and the league is calling on Kagglers to help.\n\nIn this competition, you’ll develop a computer vision model that automatically detects helmet impacts that occur on the field. Kick off with a dataset of more than one thousand definitive head impacts from thousands of game images, labeled video from the sidelines and end zones, and player tracking data. This information is sourced from the NFL’s Next Gen Stats (NGS) system, which documents the position, speed, acceleration, and orientation for every player on the field during NFL games.\n\nThis competition is part of the NFL’s annual 1st and Future competition, which is designed to spur innovation in athlete safety and performance. For the first time this year, 1st and Future will be broadcast in primetime during Super Bowl LV week on NFL Network, and winning Kagglers may have the opportunity to present their computer vision systems as part of this exciting event.\n\nIf successful, you could support the NFL’s research programs in a big way: improving athletes' safety. Backed by this research, the NFL may implement rule changes and helmet design improvements to try to better protect the athletes who play the game millions watch each week.\n\nThe National Football League is America's most popular sports league. Founded in 1920, the NFL developed the model for the successful modern sports league and is committed to advancing progress in the diagnosis, prevention, and treatment of sports-related injuries. Health and safety efforts include support for independent medical research and engineering advancements as well as a commitment to work to better protect players and make the game safer, including enhancements to medical protocols and improvements to how our game is taught and played. For more information about the NFL's health and safety efforts, please visit NFL.com/PlayerHealthandSafety.\n\nThis is a Code Competition. Refer to Code Requirements for details.\n\nEvaluation\nIn this task, you will segment helmet collisions in videos of football plays using bounding boxes. This competition is evaluated using a micro F1 score at an Intersection over Union (IoU) threshold of 0.35.\n\nThere are a few important differences from other bounding box metrics:\n\nThe main departure from a traditional metric is that some imprecision on the timing of the impact is acceptable. For a given ground truth impact, a prediction within +/- 4 frames (9 frames total) within the same play can be accepted as valid without necessarily degrading the score. Assuming the player is moving over the course of those frames, the exact bounding box predicted to achieve an IoU of 1.0 would also vary depending on the frame.\nAs one helmet may partially obscure another from the camera's perspective, both predicted and ground truth bounding boxes may overlap. However, at most one prediction will ever be assigned to a given ground truth box.\nThe two criteria described above mean that one or more predictions could theoretically be assigned to more than one ground truth boxes. If this happens, our metric will optimize for the assignments between your prediction(s) and the ground truth boxes that lead to the highest total number of True Positives (thereby maximizing the F1 score). At most one prediction will be assigned to any ground truth box and vice versa.\nThe IoU of a proposed bounding box and a ground truth bounding box is calculated as:\nIoU(A, B) = (A ∩ B) / (A ∪ B).\n\nThe metric treats any IoU of at least 0.35 as a true positive.\n\nF1 is calculated as follows:\n\nF1 = 2 * (precision * recall) / (precision + recall)\n\nwhere:\n\nprecision = TP / (TP + FP)\nrecall = TP / (TP + FN)",
    "type": "Classification",
    "model": [
        "Pytorch"
    ],
    "code": "yolo-with-player-assignment-pp.ipynb",
    "score": 0.4387,
    "evaluation": "Confusion matrix",
    "min score": 0.3561,
    "medal": "Silver"
}